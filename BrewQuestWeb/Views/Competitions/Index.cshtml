@model IEnumerable<Competition>

@{
    ViewData["Title"] = "Homebrew Competitions";
    int currentPage = ViewBag.CurrentPage;
    int totalPages = ViewBag.TotalPages;
    string sortColumn = ViewBag.SortColumn;
    string sortDirection = ViewBag.SortDirection;
    List<string> statesFilter = ViewBag.StatesFilter ?? new List<string>();
}

<h1>@ViewData["Title"]</h1>

<table id="competitionsTable">
    <thead>
        <tr>
            <th>
                <a href="@Url.Action("Index", new { page = 1, sortColumn = "CompetitionName", sortDirection = sortDirection == "asc" ? "desc" : "asc", states = statesFilter })">Competition Name</a>
            </th>
            <th>
                <a href="@Url.Action("Index", new { page = 1, sortColumn = "RegistrationWindowOpen", sortDirection = sortDirection == "asc" ? "desc" : "asc", states = statesFilter })">Registration Window Open</a>
            </th>
            <th>
                <a href="@Url.Action("Index", new { page = 1, sortColumn = "RegistrationWindowClose", sortDirection = sortDirection == "asc" ? "desc" : "asc", states = statesFilter })">Registration Window Close</a>
            </th>
            <th>
                <a href="@Url.Action("Index", new { page = 1, sortColumn = "EntryWindowClose", sortDirection = sortDirection == "asc" ? "desc" : "asc", states = statesFilter })">Entry Window Close</a>
            </th>
            <th>
                <a href="@Url.Action("Index", new { page = 1, sortColumn = "FinalJudgingDate", sortDirection = sortDirection == "asc" ? "desc" : "asc", states = statesFilter })">Final Judging Date</a>
            </th>
            <th>
                <a href="@Url.Action("Index", new { page = 1, sortColumn = "LocationCity", sortDirection = sortDirection == "asc" ? "desc" : "asc", states = statesFilter })">City</a>
            </th>
            <th>
                <a href="@Url.Action("Index", new { page = 1, sortColumn = "LocationState", sortDirection = sortDirection == "asc" ? "desc" : "asc", states = statesFilter })">State</a>
            </th>
            <th>
                <a href="@Url.Action("Index", new { page = 1, sortColumn = "EntryFee", sortDirection = sortDirection == "asc" ? "desc" : "asc", states = statesFilter })">Entry Fee</a>
            </th>
        </tr>
    </thead>
    <tbody>
        @foreach (var comp in Model)
        {
            <tr>
                <td>@comp.CompetitionName</td>
                <td>@comp.RegistrationWindowOpen</td>
                <td>@comp.RegistrationWindowClose</td>
                <td>@comp.EntryWindowClose</td>
                <td>@comp.FinalJudgingDate</td>
                <td>@comp.LocationCity</td>
                <td>@comp.LocationState</td>
                <td>@comp.EntryFee</td>
            </tr>
        }
    </tbody>
</table>

<div>
    <a href="@Url.Action("Index", new { page = 1, sortColumn, sortDirection, states = statesFilter })">First</a>
    @if (currentPage > 1)
    {
        <a href="@Url.Action("Index", new { page = currentPage - 1, sortColumn, sortDirection, states = statesFilter })">Previous</a>
    }
    @if (currentPage < totalPages)
    {
        <a href="@Url.Action("Index", new { page = currentPage + 1, sortColumn, sortDirection, states = statesFilter })">Next</a>
    }
    <a href="@Url.Action("Index", new { page = totalPages, sortColumn, sortDirection, states = statesFilter })">Last</a>
</div>

<button onclick="showModal()">Filter by State</button>

<div id="filterModal" style="display:none;">
    <form method="get" action="@Url.Action("Index")">
        @foreach (var state in Model.Select(x => x.LocationState).Distinct())
        {
            <div>
                <label>
                    <input type="checkbox" name="states" value="@state" @(statesFilter.Contains(state) ? "checked" : "") /> @state
                </label>
            </div>
        }
        <button type="submit">Apply</button>
    </form>
    <button onclick="closeModal()">Close</button>
</div>

<script>
    function showModal() {
        document.getElementById('filterModal').style.display = 'block';
    }

    function closeModal() {
        document.getElementById('filterModal').style.display = 'none';
    }
</script>
